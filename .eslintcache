[{"D:\\React.js\\todo\\src\\index.js":"1","D:\\React.js\\todo\\src\\App.js":"2","D:\\React.js\\todo\\src\\reportWebVitals.js":"3","D:\\React.js\\todo\\src\\Firrbase.js":"4","D:\\React.js\\todo\\src\\Todo.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1844,"mtime":1610008721321,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":810,"mtime":1610004994644,"results":"10","hashOfConfig":"7"},{"size":702,"mtime":1610003851110,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1czqiks",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\React.js\\todo\\src\\index.js",[],["25","26"],"D:\\React.js\\todo\\src\\App.js",["27","28","29"],"// import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './Firrbase';\nimport firebase from 'firebase';\n\nfunction App() {\n  const [todos , setTodos]= useState([ ]);\n  const [input , setInput] =useState('');\n  const [input2 , setInput2] =useState('');\n  const date = Date.now();\n  const addTodo = (event)=>{\n   event.preventDefault();\n\n    db.collection('todos').add({\n      todo: input ,\n      desc: input2,\n      time: {date}\n    })\n    setInput('');\n    setInput2('');\n    // setTodos([...todos , input])\n  \n  }\n  useEffect(() => {\n    db.collection('todos').orderBy('time', 'desc').onSnapshot(Snapshot=>{ \n      setTodos(Snapshot.docs.map(doc=>({id: doc.id , todo: doc.data().todo , desc: doc.data().desc })))\n\n      })\n    \n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"divc\">\n      <img className=\"logo\"src=\"https://i.pinimg.com/originals/52/6a/bf/526abf16cc3e74882fa7304abc0f841c.png\"/>\n      <h1 className=\"heading\">Hello <span> Welcome </span>  </h1>\n      </div>\n      \n      <form>\n      <TextField id=\"outlined-basic\" label=\"Todo\" variant=\"outlined\" value={input} onChange={event=> setInput(event.target.value)}/>\n      <span className=\"span\"> </span>\n      <TextField id=\"outlined-basic\" label=\"About\" variant=\"outlined\" value={input2} onChange={event=> setInput2(event.target.value)}/>\n      </form>\n      <div className=\"padding\">\n      <Button disabled={!input , !input2} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" type=\"submit\" onClick={addTodo} className=\"\">Add Todo</Button>\n\n      </div>\n      <ul className=\"list\">\n          {todos.map(todo=>(\n            <Todo todo={todo}/>\n          ))}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React.js\\todo\\src\\reportWebVitals.js",[],"D:\\React.js\\todo\\src\\Firrbase.js",[],["30","31"],"D:\\React.js\\todo\\src\\Todo.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":38,"column":7,"nodeType":"42","endLine":38,"endColumn":112},{"ruleId":"43","severity":1,"message":"44","line":48,"column":32,"nodeType":"45","messageId":"46","endLine":48,"endColumn":33},{"ruleId":"32","replacedBy":"47"},{"ruleId":"34","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["49"],["50"],"no-global-assign","no-unsafe-negation"]